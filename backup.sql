--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2 (Debian 16.2-1.pgdg120+2)
-- Dumped by pg_dump version 16.2 (Debian 16.2-1.pgdg120+2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

CREATE DATABASE "eltoptest";

\connect "eltoptest"

--
-- Name: UserIdentities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserIdentities" (
    "Id" text NOT NULL,
    "UserId" text NOT NULL,
    "Secret" text NOT NULL
);


ALTER TABLE public."UserIdentities" OWNER TO postgres;

--
-- Name: Users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Users" (
    "Id" text NOT NULL,
    "Version" bigint NOT NULL,
    "Name" text NOT NULL,
    "ClaimsJson" text NOT NULL
);


ALTER TABLE public."Users" OWNER TO postgres;

--
-- Name: _KeyValues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."_KeyValues" (
    "Key" text NOT NULL,
    "Value" text NOT NULL,
    "ExpiresAt" timestamp with time zone
);


ALTER TABLE public."_KeyValues" OWNER TO postgres;

--
-- Name: _Operations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."_Operations" (
    "Id" text NOT NULL,
    "AgentId" text NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "CommitTime" timestamp with time zone NOT NULL,
    "CommandJson" text NOT NULL,
    "ItemsJson" text NOT NULL
);


ALTER TABLE public."_Operations" OWNER TO postgres;

--
-- Name: _Sessions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."_Sessions" (
    "Id" character varying(256) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "LastSeenAt" timestamp with time zone NOT NULL,
    "IPAddress" text NOT NULL,
    "UserAgent" text NOT NULL,
    "AuthenticatedIdentity" text NOT NULL,
    "UserId" text,
    "IsSignOutForced" boolean NOT NULL,
    "OptionsJson" text NOT NULL
);


ALTER TABLE public."_Sessions" OWNER TO postgres;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: addresses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.addresses (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    region text NOT NULL,
    district text NOT NULL,
    street text NOT NULL,
    home_number text NOT NULL,
    home_or_office integer NOT NULL,
    domophone_code text
);


ALTER TABLE public.addresses OWNER TO postgres;

--
-- Name: addresses_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.addresses ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.addresses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: banners; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banners (
    id bigint NOT NULL,
    locale text NOT NULL,
    photo text NOT NULL,
    title text NOT NULL,
    link text NOT NULL,
    description text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.banners OWNER TO postgres;

--
-- Name: banners_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.banners ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.banners_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: brands; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.brands (
    id bigint NOT NULL,
    name text NOT NULL,
    is_popular text NOT NULL,
    "Link" text NOT NULL,
    photo text
);


ALTER TABLE public.brands OWNER TO postgres;

--
-- Name: brands_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.brands ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.brands_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: carts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.carts (
    id bigint NOT NULL,
    products jsonb,
    user_id bigint NOT NULL,
    "OrderId" bigint
);


ALTER TABLE public.carts OWNER TO postgres;

--
-- Name: carts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.carts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.carts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: couriers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.couriers (
    id bigint NOT NULL,
    order_id bigint NOT NULL,
    last_name text NOT NULL,
    first_name text NOT NULL,
    middle_name text NOT NULL,
    phone_number text NOT NULL,
    password text NOT NULL,
    passport_number text NOT NULL,
    passport_letter text NOT NULL,
    "passport_PINFL" text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.couriers OWNER TO postgres;

--
-- Name: couriers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.couriers ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.couriers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: favourites; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.favourites (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    product_ids bigint[] NOT NULL
);


ALTER TABLE public.favourites OWNER TO postgres;

--
-- Name: favourites_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.favourites ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.favourites_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: files; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.files (
    id bigint NOT NULL,
    name text NOT NULL,
    file_id uuid,
    extension text,
    path text,
    size bigint NOT NULL,
    type integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.files OWNER TO postgres;

--
-- Name: files_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    city text NOT NULL,
    region text NOT NULL,
    street text NOT NULL,
    home_number text NOT NULL,
    comment_for_courier text NOT NULL,
    delivery_time text,
    payment_type text NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL,
    extra_phone_number text NOT NULL,
    status text,
    products jsonb,
    "CourierEntityId" bigint,
    "UserEntityId" bigint
);


ALTER TABLE public.orders OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.orders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: product_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product_category (
    id bigint NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.product_category OWNER TO postgres;

--
-- Name: product_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.product_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.product_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: product_sub_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product_sub_category (
    id bigint NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.product_sub_category OWNER TO postgres;

--
-- Name: product_sub_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.product_sub_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.product_sub_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    id bigint NOT NULL,
    name_uz text NOT NULL,
    name_ru text NOT NULL,
    description_uz text NOT NULL,
    description_ru text NOT NULL,
    brand_name text NOT NULL,
    count integer,
    max_count integer NOT NULL,
    info_count integer,
    price numeric NOT NULL,
    discount_price numeric NOT NULL,
    discount_percent numeric NOT NULL,
    price_type text NOT NULL,
    is_delivery_free boolean NOT NULL,
    photo_1 text,
    photo_2 text,
    photo_3 text,
    photo_4 text,
    photo_5 text,
    photo_6 text,
    tag text,
    weight numeric NOT NULL,
    unit text,
    is_active boolean NOT NULL,
    category text NOT NULL,
    sub_category text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    "CartId" bigint,
    "FavouriteId" bigint
);


ALTER TABLE public.products OWNER TO postgres;

--
-- Name: products_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.products ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: project_users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project_users (
    id bigint NOT NULL,
    phone_number text NOT NULL,
    password text NOT NULL,
    role text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE public.project_users OWNER TO postgres;

--
-- Name: project_users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.project_users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.project_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: UserIdentities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserIdentities" ("Id", "UserId", "Secret") FROM stdin;
\.


--
-- Data for Name: Users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Users" ("Id", "Version", "Name", "ClaimsJson") FROM stdin;
\.


--
-- Data for Name: _KeyValues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."_KeyValues" ("Key", "Value", "ExpiresAt") FROM stdin;
\.


--
-- Data for Name: _Operations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."_Operations" ("Id", "AgentId", "StartTime", "CommitTime", "CommandJson", "ItemsJson") FROM stdin;
\.


--
-- Data for Name: _Sessions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."_Sessions" ("Id", "Version", "CreatedAt", "LastSeenAt", "IPAddress", "UserAgent", "AuthenticatedIdentity", "UserId", "IsSignOutForced", "OptionsJson") FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20240216093231_Initial	8.0.0-rc.2.23480.1
\.


--
-- Data for Name: addresses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.addresses (id, user_id, region, district, street, home_number, home_or_office, domophone_code) FROM stdin;
\.


--
-- Data for Name: banners; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.banners (id, locale, photo, title, link, description, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: brands; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.brands (id, name, is_popular, "Link", photo) FROM stdin;
1	qwqw	True	qwwq	\N
2	Adidas	True	https://adidas.com	\N
\.


--
-- Data for Name: carts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.carts (id, products, user_id, "OrderId") FROM stdin;
1	[{"quantity": 1, "product_id": 1}, {"quantity": 1, "product_id": 2}]	2	\N
\.


--
-- Data for Name: couriers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.couriers (id, order_id, last_name, first_name, middle_name, phone_number, password, passport_number, passport_letter, "passport_PINFL", created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: favourites; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.favourites (id, user_id, product_ids) FROM stdin;
\.


--
-- Data for Name: files; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.files (id, name, file_id, extension, path, size, type, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.orders (id, user_id, city, region, street, home_number, comment_for_courier, delivery_time, payment_type, first_name, last_name, extra_phone_number, status, products, "CourierEntityId", "UserEntityId") FROM stdin;
\.


--
-- Data for Name: product_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product_category (id, name) FROM stdin;
1	Test category
2	sa
3	string
4	stringsasa
\.


--
-- Data for Name: product_sub_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product_sub_category (id, name) FROM stdin;
1	Test Sub Category
2	komil
\.


--
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.products (id, name_uz, name_ru, description_uz, description_ru, brand_name, count, max_count, info_count, price, discount_price, discount_percent, price_type, is_delivery_free, photo_1, photo_2, photo_3, photo_4, photo_5, photo_6, tag, weight, unit, is_active, category, sub_category, created_at, updated_at, "CartId", "FavouriteId") FROM stdin;
1	1	1	1	1	1	1	1	1	1	1	0	1	f	\N	\N	\N	\N	\N	\N	1	1	1	f	1	1	2024-02-16 17:12:51.160914+00	\N	\N	\N
2	7	7	7	7	7	7	7	7	7	7	0	7	f	\N	\N	\N	\N	\N	\N	7	7	7	f	7	7	2024-02-19 11:01:21.83819+00	\N	\N	\N
3	Test	Test	<p>Test</p>\r\n	<p>Test ru</p>\r\n	Test	12	12	\N	97	0	0	dollar	f	\N	\N	\N	\N	\N	\N	\N	0	kg	f	Test category	Test Sub Category	2024-02-22 09:55:44.599837+00	\N	\N	\N
4	qwwq	wqwq	<p>221</p>\r\n	<p>22</p>\r\n	wqwq	21	222222	\N	22222221	2221	0	dollar	f	\N	\N	\N	\N	\N	\N	dssd	3	kg	f	sa	Test Sub Category	2024-02-23 04:20:28.048854+00	\N	\N	\N
5	qwwq	wqwq	<p>221</p>\r\n	<p>22</p>\r\n	wqwq	21	222222	\N	22222221	2221	0	dollar	f	\N	\N	\N	\N	\N	\N	dssd	3	kg	f	sa	Test Sub Category	2024-02-23 04:20:41.360607+00	\N	\N	\N
\.


--
-- Data for Name: project_users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.project_users (id, phone_number, password, role, created_at, updated_at) FROM stdin;
1	Admin	$2a$12$voJNDVgaPxT3hQwfLUvuvOy7eyinHIHFKm7H.SzaINu40hedBq20C	Admin	2024-02-16 09:32:31.08894+00	\N
2	string	$2a$11$eWpzyuRTE0DDdsmAYJt0NuyzkBivXAF6dAA6K5NtoBCLC99t/uxLi	User	2024-02-19 10:21:29.57565+00	\N
\.


--
-- Name: addresses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.addresses_id_seq', 1, false);


--
-- Name: banners_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.banners_id_seq', 1, false);


--
-- Name: brands_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.brands_id_seq', 2, true);


--
-- Name: carts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.carts_id_seq', 1, true);


--
-- Name: couriers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.couriers_id_seq', 1, false);


--
-- Name: favourites_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.favourites_id_seq', 1, false);


--
-- Name: files_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.files_id_seq', 1, false);


--
-- Name: orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.orders_id_seq', 1, false);


--
-- Name: product_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.product_category_id_seq', 4, true);


--
-- Name: product_sub_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.product_sub_category_id_seq', 2, true);


--
-- Name: products_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.products_id_seq', 5, true);


--
-- Name: project_users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.project_users_id_seq', 2, true);


--
-- Name: UserIdentities PK_UserIdentities; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserIdentities"
    ADD CONSTRAINT "PK_UserIdentities" PRIMARY KEY ("Id");


--
-- Name: Users PK_Users; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT "PK_Users" PRIMARY KEY ("Id");


--
-- Name: _KeyValues PK__KeyValues; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."_KeyValues"
    ADD CONSTRAINT "PK__KeyValues" PRIMARY KEY ("Key");


--
-- Name: _Operations PK__Operations; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."_Operations"
    ADD CONSTRAINT "PK__Operations" PRIMARY KEY ("Id");


--
-- Name: _Sessions PK__Sessions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."_Sessions"
    ADD CONSTRAINT "PK__Sessions" PRIMARY KEY ("Id");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: addresses PK_addresses; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT "PK_addresses" PRIMARY KEY (id);


--
-- Name: banners PK_banners; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banners
    ADD CONSTRAINT "PK_banners" PRIMARY KEY (id);


--
-- Name: brands PK_brands; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.brands
    ADD CONSTRAINT "PK_brands" PRIMARY KEY (id);


--
-- Name: carts PK_carts; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT "PK_carts" PRIMARY KEY (id);


--
-- Name: couriers PK_couriers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.couriers
    ADD CONSTRAINT "PK_couriers" PRIMARY KEY (id);


--
-- Name: favourites PK_favourites; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.favourites
    ADD CONSTRAINT "PK_favourites" PRIMARY KEY (id);


--
-- Name: files PK_files; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT "PK_files" PRIMARY KEY (id);


--
-- Name: orders PK_orders; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT "PK_orders" PRIMARY KEY (id);


--
-- Name: product_category PK_product_category; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product_category
    ADD CONSTRAINT "PK_product_category" PRIMARY KEY (id);


--
-- Name: product_sub_category PK_product_sub_category; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product_sub_category
    ADD CONSTRAINT "PK_product_sub_category" PRIMARY KEY (id);


--
-- Name: products PK_products; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT "PK_products" PRIMARY KEY (id);


--
-- Name: project_users PK_project_users; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_users
    ADD CONSTRAINT "PK_project_users" PRIMARY KEY (id);


--
-- Name: IX_CommitTime; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_CommitTime" ON public."_Operations" USING btree ("CommitTime");


--
-- Name: IX_StartTime; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_StartTime" ON public."_Operations" USING btree ("StartTime");


--
-- Name: IX_UserIdentities_Id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserIdentities_Id" ON public."UserIdentities" USING btree ("Id");


--
-- Name: IX_UserIdentities_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserIdentities_UserId" ON public."UserIdentities" USING btree ("UserId");


--
-- Name: IX_Users_Name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Users_Name" ON public."Users" USING btree ("Name");


--
-- Name: IX__KeyValues_ExpiresAt; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX__KeyValues_ExpiresAt" ON public."_KeyValues" USING btree ("ExpiresAt");


--
-- Name: IX__Sessions_CreatedAt_IsSignOutForced; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX__Sessions_CreatedAt_IsSignOutForced" ON public."_Sessions" USING btree ("CreatedAt", "IsSignOutForced");


--
-- Name: IX__Sessions_IPAddress_IsSignOutForced; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX__Sessions_IPAddress_IsSignOutForced" ON public."_Sessions" USING btree ("IPAddress", "IsSignOutForced");


--
-- Name: IX__Sessions_LastSeenAt_IsSignOutForced; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX__Sessions_LastSeenAt_IsSignOutForced" ON public."_Sessions" USING btree ("LastSeenAt", "IsSignOutForced");


--
-- Name: IX__Sessions_UserId_IsSignOutForced; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX__Sessions_UserId_IsSignOutForced" ON public."_Sessions" USING btree ("UserId", "IsSignOutForced");


--
-- Name: IX_addresses_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_addresses_user_id" ON public.addresses USING btree (user_id);


--
-- Name: IX_carts_OrderId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_carts_OrderId" ON public.carts USING btree ("OrderId");


--
-- Name: IX_carts_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_carts_user_id" ON public.carts USING btree (user_id);


--
-- Name: IX_favourites_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_favourites_user_id" ON public.favourites USING btree (user_id);


--
-- Name: IX_orders_CourierEntityId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_orders_CourierEntityId" ON public.orders USING btree ("CourierEntityId");


--
-- Name: IX_orders_UserEntityId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_orders_UserEntityId" ON public.orders USING btree ("UserEntityId");


--
-- Name: IX_products_CartId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_products_CartId" ON public.products USING btree ("CartId");


--
-- Name: IX_products_FavouriteId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_products_FavouriteId" ON public.products USING btree ("FavouriteId");


--
-- Name: UserIdentities FK_UserIdentities_Users_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserIdentities"
    ADD CONSTRAINT "FK_UserIdentities_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("Id") ON DELETE CASCADE;


--
-- Name: addresses FK_addresses_project_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT "FK_addresses_project_users_user_id" FOREIGN KEY (user_id) REFERENCES public.project_users(id) ON DELETE CASCADE;


--
-- Name: carts FK_carts_orders_OrderId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT "FK_carts_orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES public.orders(id);


--
-- Name: carts FK_carts_project_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT "FK_carts_project_users_user_id" FOREIGN KEY (user_id) REFERENCES public.project_users(id) ON DELETE CASCADE;


--
-- Name: favourites FK_favourites_project_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.favourites
    ADD CONSTRAINT "FK_favourites_project_users_user_id" FOREIGN KEY (user_id) REFERENCES public.project_users(id) ON DELETE CASCADE;


--
-- Name: orders FK_orders_couriers_CourierEntityId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT "FK_orders_couriers_CourierEntityId" FOREIGN KEY ("CourierEntityId") REFERENCES public.couriers(id);


--
-- Name: orders FK_orders_project_users_UserEntityId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT "FK_orders_project_users_UserEntityId" FOREIGN KEY ("UserEntityId") REFERENCES public.project_users(id);


--
-- Name: products FK_products_carts_CartId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT "FK_products_carts_CartId" FOREIGN KEY ("CartId") REFERENCES public.carts(id);


--
-- Name: products FK_products_favourites_FavouriteId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT "FK_products_favourites_FavouriteId" FOREIGN KEY ("FavouriteId") REFERENCES public.favourites(id);


--
-- PostgreSQL database dump complete
--

